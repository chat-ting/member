name: CD - Deploy to EKS

on:
  workflow_run:
    workflows: ["Build and Push Docker image"]  # ✅ CI 이름과 일치해야 함
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ Helm chart 배포를 위해 코드 가져오기
      - name: Checkout repo
        uses: actions/checkout@v4

      # 2️⃣ kubectl 설치
      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: latest

      # 3️⃣ Helm 설치
      - name: Set up Helm
        uses: azure/setup-helm@v3
        with:
          version: latest

      # 4️⃣ AWS 인증 (GitHub Secret 필요)
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2  # 서울 리전

      # 5️⃣ kubeconfig 설정 (클러스터 이름 수정 필요!)
      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --region ap-northeast-2 --name chat-ting-cluster  # ✅ 클러스터 이름 정확히 넣기

      # 6️⃣ Helm 배포 실행
      - name: Deploy using Helm
        run: |
          helm upgrade --install chat-ting-member ./helm\
            --namespace chat-ting\
            --create-namespace\
            --set backend.image.tag=${{ github.event.workflow_run.head_branch }}
    
